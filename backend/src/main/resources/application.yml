# =====================[ common ]=====================
spring:
  profiles:
    active: dev # ??? dev. ?? ? -Dspring.profiles.active=prod ? ??
  jpa:
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: false
  sql:
    init:
      #// 현재 목데이터 받을 때만 이렇게 하고 원래는 never로 바꾼다.
      mode: never
      continue-on-error: true
  websocket:
    message-broker:
      heartbeat:
        incoming: 10000
        outgoing: 10000

logging:
  level:
    org.hibernate.SQL: debug
    org.springframework.web.socket: debug
    org.springframework.messaging: debug

# =====================[ dev (local, H2) ]=====================
---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:snaptale;MODE=MySQL;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: update # ?? ?? ??

# =====================[ prod (deploy, MySQL) ]=====================
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${SNAPTALE_DB_URL} # ?: jdbc:mysql://<host>:3306/snaptale?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul
    username: ${SNAPTALE_DB_USERNAME}
    password: ${SNAPTALE_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        hbm2ddl:
          auto: update
    database-platform: org.hibernate.dialect.MySQL8Dialect
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

logging:
  level:
    root: INFO
    org.hibernate.SQL: DEBUG
